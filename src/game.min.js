import{Grass}from"./GameObjects/grass.js";import{TreasureHunter}from"./GameObjects/treasureHunter.js";import{GameBoard}from"./gameBoard.js";import{DrawTypes}from"./GameObjects/gameObject.js";import{Enemy}from"./GameObjects/enemy.js";const canvas=document.getElementById("game-canvas"),context=canvas.getContext("2d");class Game{constructor(e,t,a,s=15,r=15,i=3,n=30){this.canvasWidth=t,this.canvasHeight=a,this._context=e,this.callbacks={keydown:this._keydown.bind(this)},this._gameboard=new GameBoard(t,a,s,r,i,n),this._treasureHunter=new TreasureHunter(this._gameboard,this._onTreasureCollected),this._placeOnRandomFreeSpot(this._treasureHunter),this._enemy=new Enemy(this._gameboard,this._treasureHunter),this._placeOnRandomFreeSpot(this._enemy),this.bindEvents()}bindEvents=()=>{document.addEventListener("keydown",this.callbacks.keydown,!1)};unbindEvents=()=>{document.addEventListener("keydown",this.callbacks.keydown,!1)};_keydown=e=>{e.preventDefault();let t=!1;switch(e.key){case"ArrowLeft":t=this._treasureHunter.moveLeft();break;case"ArrowRight":t=this._treasureHunter.moveRight();break;case"ArrowDown":t=this._treasureHunter.moveDown();break;case"ArrowUp":t=this._treasureHunter.moveUp();break}t&&(this._enemy.moveToTreasureHunter(),this._drawGame())};_drawGameObject=e=>{switch(this._context.fillStyle=e?.color??"pink",e.type){case DrawTypes.RECT:this._context.fillRect(e.x*e.width,e.y*e.height,e.width,e.height);break;case DrawTypes.CIRCLE:this._context.beginPath(),this._context.arc(e.x*e.width+e.width/2,e.y*e.height+e.height/2,e.width/2,0,2*Math.PI,!1),this._context.fill();break;case DrawTypes.IMG:break;default:}};_drawBoard=()=>{this._gameboard.tiles.length>0&&(this._context.fillStyle=(new Grass).color,this._context.fillRect(0,0,this.canvasWidth,this.canvasHeight),this._gameboard.tiles.forEach((e=>{e.forEach((e=>{"Grass"!==e.constructor.name&&this._drawGameObject(e)}))})))};_drawGame=()=>{this._drawBoard(),this._drawGameObject(this._treasureHunter),this._drawGameObject(this._enemy)};_placeOnRandomFreeSpot=e=>{let t=this._gameboard.getRandomFreeSpotOnBoard();e.x=t.x,e.y=t.y,e.width=t.width,e.height=t.height};_onTreasureCollected=e=>{this._gameboard.collectTreasureTile(e)};startGame=()=>{this._drawGame()}}const game=new Game(context,canvas.width,canvas.height);game.startGame();