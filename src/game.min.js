import{Grass}from"./GameObjects/grass.js";import{TreasureHunter}from"./GameObjects/treasureHunter.js";import{GameBoard}from"./gameBoard.js";import{DrawTypes}from"./GameObjects/gameObject.js";import{Enemy}from"./GameObjects/enemy.js";import{ImageManager}from"./Helpers/imageManager.js";const canvas=document.getElementById("game-canvas"),context=canvas.getContext("2d");window.DEBUG_MODE=!1;class Game{constructor(e,t,a,r=20,s=20,o=3,n=120){this.canvasWidth=t,this.canvasHeight=a,this._context=e,this.callbacks={keydown:this._keydown.bind(this),keyButtonDown:this._keyButtonDown.bind(this),resetKeyButtonStates:this._resetKeyButtonStates.bind(this)},this._imageManager=new ImageManager,this._gameboard=new GameBoard(t,a,r,s,o,n,this._onAllTreasureCollected),this._treasureHunter=new TreasureHunter(this._gameboard,this._onTreasureCollected),this._enemy=new Enemy(this._gameboard,this._treasureHunter),this._gameboard.placeTreasureHunterAndEnemy(this._treasureHunter,this._enemy),this.bindEvents()}bindEvents=()=>{this.touch="ontouchstart"in window||window.DocumentTouch&&_instanceof(document,DocumentTouch),document.addEventListener("keydown",this.callbacks.keydown,!1),document.addEventListener("keyup",this.callbacks.resetKeyButtonStates,!1),this.touch?document.addEventListener("touchend",this.callbacks.resetKeyButtonStates,!1):document.addEventListener("mouseup",this.callbacks.resetKeyButtonStates,!1),Array.from(document.querySelectorAll("#game-buttons-container button")).forEach((e=>{this.touch?e.addEventListener("touchstart",this.callbacks.keyButtonDown,!1):e.addEventListener("mousedown",this.callbacks.keyButtonDown,!1)}))};unbindEvents=()=>{document.removeEventListener("keydown",this.callbacks.keydown,!1),document.removeEventListener("keyup",this.callbacks.resetKeyButtonStates,!1),Array.from(document.querySelectorAll("#game-buttons-container button")).forEach((e=>{this.touch?e.removeEventListener("touchstart",this.callbacks.keyButtonDown,!1):e.removeEventListener("mousedown",this.callbacks.keyButtonDown,!1)})),this.touch?document.removeEventListener("touchend",this.callbacks.resetKeyButtonStates,!1):document.removeEventListener("mouseup",this.callbacks.resetKeyButtonStates,!1)};_keyButtonDown=e=>{let t=e.currentTarget;t&&(t.style.background=`no-repeat center/cover url('./img/${t.id}-pressed.webp')`),this._moveTimerId||(this._move(t.dataset.key),this._moveTimerId=setInterval(this._move,100,t.dataset.key))};_resetKeyButtonStates=()=>{this._moveTimerId&&(clearInterval(this._moveTimerId),this._moveTimerId=void 0),Array.from(document.querySelectorAll("#game-buttons-container button")).forEach((e=>{e.style.background=`no-repeat center/cover url('./img/${e.id}.webp')`}))};_keydown=e=>{let t=document.querySelector(`#game-buttons-container button[data-key="${e.key}"]`);switch(t&&(t.style.background=`no-repeat center/cover url('./img/${t.id}-pressed.webp')`),e.key){case"ArrowLeft":case"ArrowRight":case"ArrowDown":case"ArrowUp":e.preventDefault(),this._move(e.key);break;case"d":e.preventDefault(),e.ctrlKey&&(window.DEBUG_MODE=!window.DEBUG_MODE,this._drawGame())}};_move=e=>{let t=!1;switch(e){case"ArrowLeft":t=this._treasureHunter.moveLeft();break;case"ArrowRight":t=this._treasureHunter.moveRight();break;case"ArrowDown":t=this._treasureHunter.moveDown();break;case"ArrowUp":t=this._treasureHunter.moveUp();break}t&&(this._enemy.moveToTreasureHunter(),this._drawGame())};_drawGameObject=e=>{switch(this._context.fillStyle=e?.color??"pink",e.type){case DrawTypes.IMG:let t=this._imageManager.loadImage(e.imgSrc);if(t?.complete&&(this._context.drawImage(t,e.x*e.width,e.y*e.height,e.width,e.height),!DEBUG_MODE))break;case DrawTypes.RECT:this._context.fillRect(e.x*e.width,e.y*e.height,e.width,e.height);break;case DrawTypes.CIRCLE:this._context.beginPath(),this._context.arc(e.x*e.width+e.width/2,e.y*e.height+e.height/2,e.width/2,0,2*Math.PI,!1),this._context.fill();break;default:}window.DEBUG_MODE&&(this._context.fillStyle="white",this._context.fillText(e.pos.toString(),e.x*e.width+10,e.y*e.height+10,e.width,e.height))};_drawBoard=()=>{if(this._gameboard.tiles.length>0){this._gameboard.tiles.forEach((e=>{e.forEach((e=>{this._drawGameObject(e)}))}));let e=(new Grass).color;this._gameboard.tiles.forEach((t=>{t.forEach((t=>{"Grass"===t.constructor.name&&(t.color=e)}))}))}};_drawGame=()=>{this._drawBoard(),this._drawGameObject(this._treasureHunter),this._drawGameObject(this._enemy)};_onTreasureCollected=e=>{this._gameboard.collectTreasureTile(e)};_onAllTreasureCollected=()=>{this.restartGame()};restartGame=()=>{this._gameboard.generateBoard(),this._gameboard.placeTreasureHunterAndEnemy(this._treasureHunter,this._enemy),this._drawGame()};startGame=()=>{this._imageManager.loadListOfImages(["./img/tile-grass-1.webp","./img/tile-grass-2.webp","./img/tile-grass-3.webp","./img/tile-grass-4.webp","./img/tile-wall-1.webp","./img/tile-wall-2.webp","./img/tile-wall-3.webp","./img/tile-treasure-1.webp","./img/tile-treasurehunter-1.webp","./img/tile-enemy-1.webp"],(()=>{this._drawGame()}))}}const game=new Game(context,canvas.width,canvas.height);game.startGame();