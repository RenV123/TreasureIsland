import{Vector2D}from"../Helpers/vector2D.js";import{colorShade}from"../Helpers/helperlib.js";import{GameObject,DrawTypes}from"./gameObject.js";export class Enemy extends GameObject{type=DrawTypes.CIRCLE;color="#F94144";whiteListedTiles=["Grass"];constructor(e,t,s,o,h,a){super(s,o,h,a),this._gameboard=e,this._treasureHunter=t}moveToTreasureHunter(){let e={listOfCheckedSpots:[],activePaths:[],goodPaths:[],badPaths:[]},t=this._gameboard.getTile(this.pos.x,this.pos.y).pos;if(e.listOfCheckedSpots.push(t),e.activePaths.push([t]),this._findTreasureHunterPathRecursive(e),e.listOfCheckedSpots.forEach((e=>{this._gameboard.getTile(e.x,e.y).color="#7EB356"})),e.goodPaths?.[0]?.length>0){this.x=e.goodPaths[0][1].x,this.y=e.goodPaths[0][1].y;let t="#99c247";e.goodPaths.reverse().forEach((e=>{t=colorShade(t,10),e.forEach((e=>{this._gameboard.getTile(e.x,e.y).color=t}))}))}}_findTreasureHunterPathRecursive(e){let t=[];for(;e.activePaths.length>0;){let s=e.activePaths.pop();if(s&&s.length>0){let o=s[s.length-1],h=[this._gameboard.getTile(o.x+1,o.y),this._gameboard.getTile(o.x-1,o.y),this._gameboard.getTile(o.x,o.y+1),this._gameboard.getTile(o.x,o.y-1)],a=!0;h.forEach((o=>{o&&this.whiteListedTiles.includes(o.constructor.name)&&!e.listOfCheckedSpots.includes(o.pos)&&(a=!1,o.pos.equals(this._treasureHunter.pos)?e.goodPaths.push([...s,o.pos]):(e.listOfCheckedSpots.push(o.pos),t.push([...s,o.pos])))})),a&&e.badPaths.push(s)}}e.activePaths=t,e.activePaths.length>0&&0==e.goodPaths.length?this._findTreasureHunterPathRecursive(e):e.goodPaths.length>0&&e.goodPaths.sort(((e,t)=>e.length>t.length))}}