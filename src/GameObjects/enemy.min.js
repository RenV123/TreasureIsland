import{Vector2D}from"../Helpers/vector2D.js";import{colorShade}from"../Helpers/helperlib.js";import{GameObject,DrawTypes}from"./gameObject.js";export class Enemy extends GameObject{type=DrawTypes.CIRCLE;color="#F94144";whiteListedTiles=["Grass"];constructor(e,t,s,r,o,i){super(s,r,o,i),this._gameboard=e,this._treasureHunter=t}moveToTreasureHunter(){let e={listOfPathWays:[],listOfCheckedSpots:[]};e.listOfPathWays.push([]);let t=this._gameboard.getTile(this.pos.x,this.pos.y).pos;this._moveToTreasureHunterRecursive(t,0,e);let s=e.listOfPathWays.filter((e=>e.length>0&&this._treasureHunter.pos.equals(e[e.length-1])));s.sort(((e,t)=>e.length-t.length)),s[0]?.length&&(this.x=s[0]?.[0]?.x,this.y=s[0]?.[0]?.y),e.listOfCheckedSpots?.forEach((e=>{this._gameboard.getTile(e.x,e.y).color="#A9CC8E"}));let r="#99c247";s.reverse().forEach((e=>{r=colorShade(r,10),e.forEach((e=>{this._gameboard.getTile(e.x,e.y).color=r}))}))}_moveToTreasureHunterRecursive(e,t,s){if(!e)return;if(s.listOfCheckedSpots.push(e),e.equals(this._treasureHunter.pos))return;let r=Vector2D.subtract(this._treasureHunter.pos,e);if(r.length()>0){let o=Vector2D.divide(r,r.length());o=new Vector2D(o.x>0?Math.ceil(o.x):Math.floor(o.x),o.y>0?Math.ceil(o.y):Math.floor(o.y));let i=[this._gameboard.getTile(e.x+1,e.y),this._gameboard.getTile(e.x-1,e.y),this._gameboard.getTile(e.x,e.y+1),this._gameboard.getTile(e.x,e.y-1)];i.sort(((e,t)=>Vector2D.subtract(this._treasureHunter.pos,e.pos).length()-Vector2D.subtract(this._treasureHunter.pos,t.pos).length()));let a=[...s.listOfPathWays[t]];for(let e=0;e<i.length;e++)if(i[e]&&this.whiteListedTiles.includes(i[e].constructor.name)&&!s.listOfCheckedSpots.includes(i[e].pos)){if(i[e].pos.equals(this._treasureHunter.pos))return void s.listOfPathWays[t].push(i[e].pos);s.listOfPathWays.push([...a,i[e].pos]),this._moveToTreasureHunterRecursive(i[e].pos,s.listOfPathWays.length-1,s)}}}_canMoveOnTile(e,t){let s=this._gameboard.getTile(e,t);return this.whiteListedTiles.includes(s.constructor.name)}}