import{Grass}from"./GameObjects/grass.js";import{getRandomNr,PathWayFinder}from"./Helpers/helperlib.js";import{Wall}from"./GameObjects/wall.js";import{Treasure}from"./GameObjects/treasure.js";import{Vector2D}from"./Helpers/vector2D.js";export class GameBoard{_tiles=[];_grassTiles=[];_treasureTiles=[];_wallTiles=[];_treasureCollected=0;constructor(s,e,t=15,i=15,r=3,l=10,h){this.canvasWidth=s,this.canvasHeight=e,this._rows=t,this._columns=i,this._treasureCount=r,this._wallCount=l,this._onAllTreasureCollected=h,this.generateBoard()}get tiles(){return this._tiles}generateBoard=()=>{this._treasureCollected=0,this._tiles=[],this._treasureTiles=[],this._wallTiles=[],this._grassTiles=[];let s=[],e=this._rows*this._columns-this._wallCount-this._treasureCount;for(let t=0;t<e;t++){let e=new Grass;this._grassTiles.push(e),s.push(e)}for(let e=0;e<this._wallCount;e++){let e=new Wall;this._wallTiles.push(e),s.splice(getRandomNr(0,s.length-1),0,e)}for(let e=0;e<this._treasureCount;e++){let e=new Treasure;this._treasureTiles.push(e),s.splice(getRandomNr(0,s.length-1),0,e)}s.map(((s,e)=>{s.x=e%this._columns,s.y=parseInt(e/this._rows),s.width=this.canvasWidth/this._columns,s.height=this.canvasHeight/this._rows}));for(let e=0;e<this._rows;e++)this._tiles.push(s.slice(e*this._rows,e*this._rows+this._columns))};placeTreasureHunterAndEnemy=(s,e)=>{let t=new PathWayFinder(this,["Grass","Treasure"]),i=!1;for(;!i;){let e=this._grassTiles[getRandomNr(0,this._grassTiles.length-1)],r=!0;this._treasureTiles.forEach((s=>{t.canFindPathBetweenPoints(e.pos,s.pos)||(r=!1)})),r?(s.x=e.pos.x,s.y=e.pos.y,s.width=e.width,s.height=e.height,i=!0):this.generateBoard()}let r=new Vector2D;s.x<this._columns/2?r.x=getRandomNr(this._columns/2,this._columns):r.x=getRandomNr(0,this._columns/2),s.y<this._rows/2?r.y=getRandomNr(this._rows/2,this._rows):r.y=getRandomNr(0,this._rows/2);let l=r.x*r.y,h=this._grassTiles[l];i=!1;let a=0,o=this._columns/2*(this._rows/2);for(;!i&&a<o;)h&&t.canFindPathBetweenPoints(h.pos,s.pos)&&(e.x=h.pos.x,e.y=h.pos.y,e.width=h.width,e.height=h.height,i=!0),l>=this._grassTiles.length&&(l=0),h=this._grassTiles[++l],a++};getTile(s,e){return this._tiles[e]?.[s]}collectTreasureTile(s){let e=this._treasureTiles.findIndex((e=>e===s));if(-1!==e){let t=new Grass(s.x,s.y,s.width,s.height);this._treasureTiles.splice(e,1),this._tiles[s.y][s.x]=t,this._treasureCollected++,this._treasureCollected==this._treasureCount&&this._onAllTreasureCollected()}}}